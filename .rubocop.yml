require: rubocop-rspec

AllCops:
  Exclude:
    - bin/bundle
    - bin/rake
    - bin/rails
    - bin/setup
    - bin/spring
    - bin/update
    - db/schema.rb
    - vendor/**/*

Layout/IndentFirstArrayElement:
  EnforcedStyle: consistent

Layout/IndentFirstHashElement:
  EnforcedStyle: consistent

Lint/UnusedMethodArgument:
  Enabled: false

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/LineLength:
  Max: 160

Metrics/MethodLength:
  Enabled: false

Metrics/ParameterLists:
  Max: 7

Metrics/ModuleLength:
  Enabled: false

Naming/AccessorMethodName:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/FrozenStringLiteralComment:
  Enabled: false

Metrics/CyclomaticComplexity: # todo this finds nasty parts of the code, please enable and fix
  Enabled: false

Metrics/PerceivedComplexity: # todo this finds nasty parts of the code, please enable and fix
  Enabled: false

Style/MultilineBlockChain:
  Enabled: false

Style/NumericPredicate:
  Enabled: false

Layout/EmptyLineAfterGuardClause:
  Enabled: false

Style/BlockDelimiters:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

RSpec/ExampleLength:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/MessageSpies:
  Enabled: false

RSpec/AnyInstance: # todo re enable when we have a better way to fake the use_case_factory
  Enabled: false

RSpec/VerifiedDoubles: # todo re enable when we have a better way to fake the use_case_factory
  Enabled: false

RSpec/NamedSubject:
  Enabled: false

RSpec/ExpectInHook: #  useful for mocking classes outside of the scope of test in that they do not need to appear in the expectations
  Enabled: false

RSpec/NestedGroups:
  Max: 6

RSpec/DescribeClass:
  Enabled: false
